.panel {
  min-width: 0;
  display: flex;
  flex-direction: column;
  height: 100vh; /* Fill full height */
}

.panel .section {
  flex: 1 1 0;
  overflow: hidden;
  display: flex;
  flex-direction: column;
  overflow-y: auto;
  flex: 1;
  border-bottom: 1px solid var(--border);
}

.panel .section-scroll {
  overflow-y: auto;
  flex: 1;
}

.panel table {
  width: 100%;
  table-layout: fixed;
  border-collapse: collapse;
  border-spacing: 0 4px;
}

.panel th {
  background: var(--surface);
  text-align: left;
  padding: 8px;
  font-weight: 400;
  border: 1px solid var(--border);
  min-width: 0;
}

.panel td {
  padding: 4px;
  border-left: 1px solid var(--border);
  border-right: 1px solid var(--border);
  vertical-align: top;
  min-width: 0;
  text-overflow: ellipsis;
  overflow: hidden;
  white-space: nowrap;
}
.panel tr:last-child {
  border-bottom: 1px solid var(--border);
}

.panel tbody tr {
  border-radius: 4px;
  min-width: 0;
  background-color: var(--background);
  cursor: default;
}
.panel tbody tr:hover:not(.selected) {
  background-color: var(--surface-hover) !important;
}

.panel tbody tr:nth-child(even) {
  background-color: var(--surface);
}

.expandable:hover {
  background-color: var(--surface-hover) !important;
  cursor: pointer;
}

.query-wrap {
  white-space: pre-wrap;
  word-break: break-word;
  overflow-wrap: break-word;
  overflow-x: hidden;
  color: var(--muted);
}

.json-wrap {
  white-space: pre-wrap;
  word-break: break-word;
  overflow-wrap: break-word;
  overflow-x: hidden;
}

.json-key {
  color: var(--primary);
}

.json-string {
  color: var(--secondary);
}

.json-number {
  color: var(--success);
}

.json-boolean {
  color: var(--success);
}

.json-null {
  color: var(--danger);
}

.nowrap {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.settings {
  display: flex;
  flex-direction: row;
  padding: 4px 0px;
  justify-content: flex-start;
  align-items: center;
}

.settings > * {
  margin: 0 8px;
}

.filterinput {
  padding: 0px 12px;
  border: 0px solid #ccc;
  border-radius: 12px;
  font-size: 12px;
  line-height: 12px;
  outline: none;
  background-color: var(--surface-alt);
  box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.1);
  transition:
    border-color 0.2s,
    box-shadow 0.2s;
  width: 240px;
  height: 24px;
}

.filterinput:focus {
  box-shadow: 0 0 0 2px var(--primary-dark);
}

.expandablecontent {
  /* padding: 8px; */
}

.expandedrow {
  position: relative;
  z-index: 2;
  background-color: var(--primary-light) !important;
}

.selected {
  background-color: var(--primary-light) !important;
}

.content {
  display: flex;
  height: 100%;
}
.content > div {
  margin: 8px;
}

.graphqlrequestcontent {
  display: flex;
  flex-direction: column;
  height: 100%; /* Fill full height */
}
.graphqlrequestcontent .content {
  overflow: hidden;
  overflow-y: auto;
}
.content .querytext,
.content .jsontext {
  white-space: pre-wrap !important;
  word-break: break-word;
}
.content .collapsed .jsontext {
  white-space: normal !important;
  word-break: break-word;
}

.services {
  margin: 0px !important;
}
.content:not(.serviceIsSelected) .services {
  width: 100%;
}
.content .services {
  width: 25%;
}

.services th {
  background: var(--background);
}
.services tr:nth-child(odd):not(.selected) {
  background-color: var(--surface) !important;
}
.services tr:nth-child(even):not(.selected) {
  background-color: var(--background) !important;
}
.expandablecontentrow > td {
  padding: 0px !important;
  /* position: relative; */
}

.expandablecontent {
  position: relative;
  background: white;
  z-index: 0;
  overflow: hidden;
}

.expandablecontent::before,
.expandablecontent::after {
  content: "";
  position: absolute;
  left: 0;
  width: 100%;
  height: 10px;
  pointer-events: none;
  z-index: 1;
}

.expandablecontent::before {
  top: 0;
  background: linear-gradient(to bottom, rgba(0, 0, 0, 0.1), transparent);
}

.expandablecontent::after {
  bottom: 0;
  background: linear-gradient(to top, rgba(0, 0, 0, 0.1), transparent);
}

.servicecallwrapper {
  margin: 0px !important;
  border-left: 1px solid var(--border);
  height: 100%;
  width: 75%;
  overflow: scroll;
}
