[1mdiff --git a/src/config.js b/src/config.js[m
[1mindex 9fbaa41..0606c24 100644[m
[1m--- a/src/config.js[m
[1m+++ b/src/config.js[m
[36m@@ -153,7 +153,8 @@[m [mexport default {[m
       host: process.env.REDIS_HOST || "127.0.0.1",[m
       port: process.env.REDIS_PORT || "6379",[m
       prefix: process.env.REDIS_PREFIX || "bibdk-api-4",[m
[31m-      enabled: process.env.REDIS_ENABLED || true,[m
[32m+[m[32m      // enabled: process.env.REDIS_ENABLED || true,[m
[32m+[m[32m      enabled: false,[m
     },[m
     simplesearch: {[m
       url:[m
[1mdiff --git a/src/datasources/userinfo.datasource.js b/src/datasources/userinfo.datasource.js[m
[1mindex 47c4dc4..6cddaa1 100644[m
[1m--- a/src/datasources/userinfo.datasource.js[m
[1m+++ b/src/datasources/userinfo.datasource.js[m
[36m@@ -38,6 +38,7 @@[m [mexport async function load({ accessToken }, context) {[m
 [m
     // The Smaug "agency" field can now hold both agencyIds and branchIds. Therefore, we ensure that loggedInAgencyId always contains an agencyId.[m
     // The loggedInBranchId will always contain a branchId, which can also be an agencyId (e.g., main libraries).[m
[32m+[m[32m    // If branch act as independent, branchId will be set in both loggedInAgencyId and loggedInBranchId[m
     attributes.loggedInAgencyId = await getAgencyIdByBranchId([m
       loggedInBranchId,[m
       context[m
[36m@@ -113,6 +114,7 @@[m [mexport async function testLoad({ accessToken }, context) {[m
 [m
   // The Smaug "agency" field can now hold both agencyIds and branchIds. Therefore, we ensure that loggedInAgencyId always contains an agencyId.[m
   // The loggedInBranchId will always contain a branchId, which can also be an agencyId (e.g., main libraries).[m
[32m+[m[32m  // If branch act as independent, branchId will be set in both loggedInAgencyId and loggedInBranchId[m
   attributes.loggedInAgencyId = await getAgencyIdByBranchId([m
     attributes.loggedInBranchId,[m
     context[m
[1mdiff --git a/src/schema/libraries.js b/src/schema/libraries.js[m
[1mindex 9265b4b..3f764ca 100644[m
[1m--- a/src/schema/libraries.js[m
[1m+++ b/src/schema/libraries.js[m
[36m@@ -6,11 +6,7 @@[m [mimport { orderBy } from "lodash";[m
 import { resolveBorrowerCheck, resolveLocalizations } from "../utils/utils";[m
 import getUserBorrowerStatus from "../utils/getUserBorrowerStatus";[m
 import isEmpty from "lodash/isEmpty";[m
[31m-import {[m
[31m-  isFFUAgency,[m
[31m-  hasCulrDataSync,[m
[31m-  branchIsIndependent,[m
[31m-} from "../utils/agency";[m
[32m+[m[32mimport { isFFUAgency, hasCulrDataSync } from "../utils/agency";[m
 [m
 export const typeDef = `[m
   enum LibraryStatus {[m
[36m@@ -68,11 +64,6 @@[m [mexport const typeDef = `[m
     branchWebsiteUrl: String[m
     branchCatalogueUrl: String[m
     lookupUrl: String[m
[31m-[m
[31m-    """[m
[31m-    Branch act as independent agency[m
[31m-    """[m
[31m-    isIndependent: Boolean![m
     [m
     """[m
     branchType is type of library branch. [m
[36m@@ -147,9 +138,6 @@[m [mexport const resolvers = {[m
 [m
       return status === false;[m
     },[m
[31m-    isIndependent(parent, args, context, info) {[m
[31m-      return branchIsIndependent(parent.branchId);[m
[31m-    },[m
     async borrowerCheck(parent, args, context, info) {[m
       // pjo 19/12/23 bug BIBDK2021-2294 . If libraries are not public (number starts with 7)[m
       // we prioritize branchId OVER agencyId - since FFU and foreign libraries decides on branch-level, if they use borrowerCheck or not[m
[1mdiff --git a/src/utils/agency.js b/src/utils/agency.js[m
[1mindex 8ba3cf4..c75cf28 100644[m
[1m--- a/src/utils/agency.js[m
[1m+++ b/src/utils/agency.js[m
[36m@@ -102,6 +102,21 @@[m [mexport async function hasCulrDataSync(branchId, context) {[m
  * @returns {boolean}[m
  */[m
 export function branchIsIndependent(branchId) {[m
[32m+[m[32m  // OBS se bort fra dette udkommenteret kode, ny dynamisk l√∏sning kommer her.[m
[32m+[m
[32m+[m[32m  // const loader = context?.getLoader || context?.datasources?.getLoader;[m
[32m+[m
[32m+[m[32m  // // get AgencyId from used branchId[m
[32m+[m[32m  // const result = (await loader("library").load({ branchId })).result?.[0];[m
[32m+[m
[32m+[m[32m  // // return agencyId[m
[32m+[m[32m  // const agencyId = result?.agencyId;[m
[32m+[m
[32m+[m[32m  // // get AgencyId from used branchId[m
[32m+[m[32m  // const list = await loader("vipcore_BorrowerCheckList").load("");[m
[32m+[m
[32m+[m[32m  // console.log(".......... list", agencyId, list);[m
[32m+[m
   const whitelist = [[m
     // Agencies[m
     "876040", // Nordjyske Gymnasiebiblioteker agency[m
